Program : PROGRAM id ';' OptionalVarList FunctionList Main

OptionalVarList : VarSection
                | 

FunctionList : FunctionList FunctionListElem
             | FunctionListElem
             | 

FunctionListElem : FUNCTION FuncDefinition ':' id ';' OptionalVarList FunctionBody
                 | PROCEDURE FuncDefinition ';' OptionalVarList FunctionBody

FuncDefinition : id Parameters
              
Parameters : '(' PairList ')'
           | 

PairList : PairList ';' PairListElem
         | PairListElem
         | 

PairListElem : id ':' id

FunctionBody : BEGIN Body END ';'

Main: OptionalVarList MainSection

VarSection : VAR VarsList
           |  

VarsList : VarsList VarsListElem
         | VarsListElem

VarsListElem : VarsListElemIDs ':' VarType ';'

VarType : id
        | ARRAY ArrayIndexes OF id

ArrayIndexes : '[' num '.' '.' num ']'
             | 

VarsListElemIDs : VarsListElemIDs ',' id
                | id

MainSection : BEGIN Body END '.'

Body : Body BodyElem
     | BodyElem 

BodyElem : Factor OptionalSemiColon
         | Atrib OptionalSemiColon
         | FORStatement OptionalSemiColon
         | IFStatement OptionalSemiColon
         | WHILEStatement OptionalSemiColon

ArgsList : ArgsList ',' Arg
         | Arg
         | 

Arg : '(' Arg ')'
    | string
    | Exp


FORStatement : FOR Atrib FORTo NumExp DO FORBody

FORTo : TO
      | DOWNTO

FORBody : FORStatement
        | BEGIN Body END OptionalSemiColon
        | BodyElem

IFStatement : IF Condition THEN IFBody ELSE IFBody
            | IF Condition THEN IFBody

IFBody : BEGIN Body END OptionalSemiColon
       | BodyElem

WHILEStatement : WHILE Condition DO WHILEBody

WHILEBody : WHILEStatement
          | BEGIN Body END OptionalSemiColon
          | BodyElem

Condition : '(' Condition ')'
          | LogicExp

Atrib : IDWrapper ':' '=' Exp

IDWrapper : '(' IDWrapper ')'
          | Factor

Exp : NumExp
    | BooleanExp
    | LogicExp


NumExp : NumExp TermOp NumTerm
       | NumTerm

NumTerm : NumTerm FactorOp Factor
        | Factor

ComparationSymbol : '>'
                  | '<'
                  | '=' 
                  | '>' '='
                  | '<' '='

BooleanExp : BooleanExp ComparationSymbol BooleanExp
           | Factor

LogicExp : LogicExp OR LogicTerm
         | LogicTerm

LogicTerm : LogicTerm AND LogicNot
           | LogicNot

LogicNot : NOT LogicNot
         | '(' LogicExp ')'
         | BooleanExp

OptionalSemiColon : ';'
                  | 

Factor : Primary SuffixList

Suffix : '(' ArgsList ')'
       | '[' Exp ']'

SuffixList : SuffixList Suffix
           | 

Primary : num
        | string
        | boolean
        | id
        | '(' Exp ')'
    
TermOp : '+'
       | '-'

FactorOp : '*'
         | '/'
         | DIV
         | MOD
